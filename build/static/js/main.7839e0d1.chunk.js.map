{"version":3,"sources":["Api component/Recipes.js","Api component/food.js","Api component/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","Calories","image","IngredientLines","id","useState","ids","console","log","className","map","ingr","src","alt","Food","recipess","setRecipe","searchs","setSearchs","query","setQuery","useEffect","getRecipe","a","fetch","response","json","data","hits","Form","onSubmit","e","preventDefault","FormGroup","Label","Input","type","value","onChange","target","Button","recipe","index","label","calories","ingredientLines","Home","history","useHistory","class","onClick","push","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAgCeA,G,YA3BF,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,SAASC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,gBAAsB,KAANC,GAE/BC,mBAAS,KAF4B,mBAEjDC,EAFiD,UAMtD,OAHFC,QAAQC,IAAIF,GAIR,sBAAKG,UAAU,SAAf,UACE,oBAAIA,UAAU,MAAd,SAAqBT,IACrB,6BACGG,EAAgBO,KAAI,SAAAC,GAAI,OACvB,6BAAKA,SAIT,qBAAKF,UAAU,QAAQG,IAAKV,EAAOW,IAAI,KACvC,oBAAGJ,UAAU,OAAb,sBAA8BR,U,wCCqDvBa,EA5DJ,WAET,IAFa,EAKcT,mBAAS,IALvB,mBAKNU,EALM,KAKGC,EALH,OAMcX,mBAAS,IANvB,mBAMNY,EANM,KAMEC,EANF,OAQUb,mBAAS,IARnB,mBAQNc,EARM,KAQAC,EARA,KAUfC,qBAAU,WACVC,MAEG,CAACH,IAEJ,IAAMG,EAAS,uCAAC,8BAAAC,EAAA,sEACOC,MAAM,mCAAD,OAAoCL,EAApC,mBAdb,WAca,oBAbZ,qCAYA,cACRM,EADQ,gBAEGA,EAASC,OAFZ,OAERC,EAFQ,OAIdX,EAAUW,EAAKC,MACfrB,QAAQC,IAAImB,EAAKC,MALH,2CAAD,qDAqBf,OACE,sBAAKnB,UAAU,UAAf,UACG,6CAAoB,uBAAS,uBAEhC,cAACoB,EAAA,EAAD,CAAMC,SAVQ,SAAAC,GACdA,EAAEC,iBACJZ,EAASH,GACTC,EAAW,KAOkBT,UAAU,YAArC,SACa,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBAEA,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAO3B,UAAU,aAAa4B,MAAOpB,EAASqB,SApBxD,SAAAP,GACjBb,EAAWa,EAAEQ,OAAOF,UAgBP,WAKE,cAACG,EAAA,EAAD,CAAU/B,UAAU,SAApB,SAA6B,0CAAwB,uBAAS,4BAI7E,qBAAKA,UAAU,WAAf,SACCM,EAASL,KAAI,SAAC+B,EAAOC,GAAR,OACZ,cAAC,EAAD,CAAStC,GAAIsC,EAAiC1C,MAAOyC,EAAOA,OAAOE,MAAO1C,SAAUwC,EAAOA,OAAOG,SAAU1C,MAAOuC,EAAOA,OAAOvC,MAAOC,gBAAiBsC,EAAOA,OAAOI,iBAA9IJ,EAAOA,OAAOE,gB,eCxC5BG,EArBH,WACR,IAAMC,EAAQC,cAMhB,OACE,sBAAKvC,UAAU,KAAf,UAEG,oBAAIwC,MAAM,QAAV,yBAAkC,uBAAS,uBAAS,uBACpD,sFAA6D,uBAC7D,+FAAsE,uBACtE,wGALH,IAKmF,uBAC/E,0KAAgJ,uBAAS,uBAC1J,cAACT,EAAA,EAAD,CAAQU,QAZI,WACXH,EAAQI,KAAK,YAWc1C,UAAU,SAAtC,SAA+C,8C,QCSvC2C,EArBL,WAGV,OACE,qBAAK3C,UAAU,MAAf,SAEA,cAAC,IAAD,UAGI,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjC,cAAC,IAAD,CAAOQ,KAAK,UAAUC,UAAWzC,YCP1B0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7839e0d1.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\n//import {Card ,Button} from  'reactstrap';\r\nimport  \"./Recipes.css\";\r\n\r\n\r\nconst Recipe=({title,Calories,image,IngredientLines,id})=>{\r\n\r\n  const [ids,setIds]=useState(\"\");\r\n  console.log(ids);\r\n \r\n\r\n    return(\r\n      <div className=\"recipe\">\r\n        <h1 className=\"uiu\">{title}</h1>\r\n        <ol>\r\n          {IngredientLines.map(ingr=>(\r\n            <li>{ingr}</li>\r\n          ))}\r\n        </ol>\r\n        \r\n        <img className=\"image\" src={image} alt=\"\"></img>\r\n        <p className=\"ptag\">Calories:{Calories}</p>\r\n          \r\n      </div>\r\n     \r\n\r\n     \r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Recipe;","import React,{useEffect,useState} from \"react\";\r\nimport \"./food.css\";\r\nimport Recipe from \"./Recipes\";\r\n\r\nimport  {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Button,\r\n    Input\r\n} from 'reactstrap';\r\n\r\nimport './food.css';\r\n\r\nconst Food=()=>{\r\n\r\n  const App_id=\"57863a71\";\r\n  const App_key=\"932fc1d299dbf285ea535b63d263f77b\";\r\n\r\n  const [recipess,setRecipe]=useState([]);\r\n  const [searchs,setSearchs]=useState(\"\");\r\n\r\n  const [query,setQuery]=useState(\"\"); \r\n\r\nuseEffect(()=>{\r\ngetRecipe();\r\n\r\n}, [query]);\r\n\r\nconst getRecipe=async()=>{\r\n  const response=await fetch(`https://api.edamam.com/search?q=${query}&app_id=${App_id}&app_key=${App_key}`);\r\n  const data=await response.json();\r\n \r\n  setRecipe(data.hits);\r\n  console.log(data.hits);\r\n  \r\n}\r\n\r\nconst updateSearch=e=>{\r\n  setSearchs(e.target.value);\r\n\r\n\r\n}\r\n\r\nconst getSearch=e=>{\r\n  e.preventDefault();\r\nsetQuery(searchs);\r\nsetSearchs(\"\");\r\n}\r\n\r\nreturn(\r\n  <div className=\"foodsss\">\r\n     <h1>Food Recipe</h1><br></br><br></br>\r\n     \r\n  <Form onSubmit={getSearch} className=\"form-main\">\r\n               <FormGroup>\r\n                 <Label>Recipe:</Label>\r\n                 \r\n                 <Input type=\"text\" className=\"serach-box\" value={searchs} onChange={updateSearch}></Input>&nbsp;&nbsp;\r\n            \r\n                 <Button   className=\"danger\"><h3>Search</h3></Button><br></br><br></br>\r\n                 </FormGroup>\r\n   \r\n  </Form>\r\n  <div className=\"recipess\">\r\n  {recipess.map((recipe,index)=>(\r\n    <Recipe  id={index} key={recipe.recipe.label} title={recipe.recipe.label} Calories={recipe.recipe.calories} image={recipe.recipe.image} IngredientLines={recipe.recipe.ingredientLines}/ >\r\n  ))}\r\n  </div>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\nexport default Food;\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport {Button} from 'reactstrap';\r\nimport {useHistory,Link} from 'react-router-dom';\r\n\r\n const Home=()=> {\r\n    const history=useHistory();\r\n\r\n    const changess=()=>{\r\n        history.push(\"/Recipe\");\r\n    }\r\n    \r\n  return (\r\n    <div className=\"hh\">\r\n    \r\n       <h1 class=\"serif\">Food Recipe</h1><br></br><br></br><br></br>\r\n       <h5>\"People who love to eat are always the best people.\"</h5><br></br>\r\n       <h5> \"To eat is a necessity, but to eat intelligently is an art.\"</h5><br></br>\r\n       <h5> \"We all eat, an it would be a sad waste of opportunity to eat badly.\"</h5> <br></br>\r\n        <h5>\"If you really want to make a friend, go to someone's house and eat with him...the people who give you their food give you their heart\"</h5><br></br><br></br>\r\n       <Button onClick={changess}  className=\"danger\"><h3>Search</h3></Button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","\nimport './App.css';\n//import Recipe from \"./Recipes\";\nimport Food from \"./Api component/food\";\nimport Home from \"./Api component/Home\";\nimport {Image} from 'react-bootstrap';\nimport {BrowserRouter,Switch,Route} from \"react-router-dom\";\n\nconst App=()=>{\n\n  \nreturn(\n  <div className=\"App\">\n    \n  <BrowserRouter>\n    \n   \n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/Recipe\" component={Food}/>\n       \n      </Switch>\n  \n    </BrowserRouter>\n  </div>\n);\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}